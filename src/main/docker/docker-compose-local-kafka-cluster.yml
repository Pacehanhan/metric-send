version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
 
  kafka-1:
    image: wurstmeister/kafka
    container_name: kafka-1
    ports:
      - "9095:9092"
    environment:
      # 服务器的IP
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.174
      KAFKA_ADVERTISED_PORT: 9095
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.174:9095
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 500
      KAFKA_offsets_topic_replication_factor: 3
      # 三个分区 2个备份
      KAFKA_CREATE_TOPICS: "metric_value:3:2"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${KAFKA_DATA}/500:/kafka

  kafka-2:
    image: wurstmeister/kafka
    container_name: kafka-2
    ports:
      - "9096:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.174
      KAFKA_ADVERTISED_PORT: 9096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.174:9096
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 501
      KAFKA_offsets_topic_replication_factor: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${KAFKA_DATA}/501:/kafka


  kafka-3:
    image: wurstmeister/kafka
    container_name: kafka-3
    ports:
      - "9097:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.174
      KAFKA_ADVERTISED_PORT: 9097
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.174:9097
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 502
      KAFKA_offsets_topic_replication_factor: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${KAFKA_DATA}/502:/kafka

  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    restart: unless-stopped
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181  
